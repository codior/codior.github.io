<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bingo</title>
  
  <subtitle>627</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-07T09:44:35.884Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Bin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>piapia</title>
    <link href="http://yoursite.com/2018/05/07/piapia/"/>
    <id>http://yoursite.com/2018/05/07/piapia/</id>
    <published>2018-05-07T09:44:35.000Z</published>
    <updated>2018-05-07T09:44:35.884Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>php的闭包使用</title>
    <link href="http://yoursite.com/2018/05/04/php%E7%9A%84%E9%97%AD%E5%8C%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/05/04/php的闭包使用/</id>
    <published>2018-05-04T03:13:00.000Z</published>
    <updated>2018-05-08T08:37:41.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP的闭包使用"><a href="#PHP的闭包使用" class="headerlink" title="PHP的闭包使用"></a>PHP的闭包使用</h1><h1 id="实例1：它的实际运行过程是这样的，-attrib是一个数组和闭包函数综合体，…-attrib前面…会自动将-attrib中的第一个非闭包值取出这里是一个数组，后面的第二个值是一个闭包，它会直接传递给闭包，并将刚刚取出的非闭包值传递给闭包函数当做参数。"><a href="#实例1：它的实际运行过程是这样的，-attrib是一个数组和闭包函数综合体，…-attrib前面…会自动将-attrib中的第一个非闭包值取出这里是一个数组，后面的第二个值是一个闭包，它会直接传递给闭包，并将刚刚取出的非闭包值传递给闭包函数当做参数。" class="headerlink" title="实例1：它的实际运行过程是这样的，$attrib是一个数组和闭包函数综合体，…$attrib前面…会自动将$attrib中的第一个非闭包值取出这里是一个数组，后面的第二个值是一个闭包，它会直接传递给闭包，并将刚刚取出的非闭包值传递给闭包函数当做参数。"></a>实例1：它的实际运行过程是这样的，$attrib是一个数组和闭包函数综合体，…$attrib前面…会自动将$attrib中的第一个非闭包值取出这里是一个数组，后面的第二个值是一个闭包，它会直接传递给闭包，并将刚刚取出的非闭包值传递给闭包函数当做参数。</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$attribs</span> = [  </span><br><span class="line">        <span class="string">'name'</span> =&gt; <span class="string">'first_name'</span>,  </span><br><span class="line">        <span class="string">'value'</span> =&gt; <span class="string">'Edward'</span>  </span><br><span class="line">    ];  </span><br><span class="line"><span class="variable">$ex</span> = <span class="keyword">function</span> (<span class="variable">$t</span>) use (<span class="variable">$attribs</span>) &#123;    // ... <span class="keyword">then</span> we <span class="string">'use'</span> the actual array here  </span><br><span class="line">foreach(array_keys(<span class="variable">$attribs</span>) as <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;  </span><br><span class="line">    <span class="keyword">if</span>(current(<span class="variable">$t</span>) == <span class="variable">$v</span>)&#123;  </span><br><span class="line">        <span class="built_in">return</span>   </span><br><span class="line">  </span><br><span class="line">        <span class="variable">$attribs</span>[<span class="variable">$v</span>];  </span><br><span class="line">  </span><br><span class="line"> &#125;&#125; &#125;;  </span><br><span class="line"><span class="keyword">function</span> getValues(<span class="variable">$request</span>,Closure <span class="variable">$next</span>)&#123;   </span><br><span class="line"><span class="built_in">return</span> <span class="variable">$next</span>(<span class="variable">$request</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="variable">$attrib</span> = [array(<span class="string">'attr'</span>=&gt;<span class="string">'value'</span>),<span class="variable">$ex</span>];  </span><br><span class="line">print_r(getValues(...<span class="variable">$attrib</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP的闭包使用&quot;&gt;&lt;a href=&quot;#PHP的闭包使用&quot; class=&quot;headerlink&quot; title=&quot;PHP的闭包使用&quot;&gt;&lt;/a&gt;PHP的闭包使用&lt;/h1&gt;&lt;h1 id=&quot;实例1：它的实际运行过程是这样的，-attrib是一个数组和闭包函数综合体，…-a
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="libreoffice" scheme="http://yoursite.com/tags/libreoffice/"/>
    
  </entry>
  
</feed>
